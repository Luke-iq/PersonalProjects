using System;
using System.Collections.Generic;

namespace SequentialGearShiftingConsole
{
    class Program
    {
        static void PrintMainMenu()
        {
            Console.WriteLine("Bicycle sequential gear shitting simulator");
            Console.WriteLine("\tEnter n to create new bike");
            Console.WriteLine("\tEnter g to get current bike");
            Console.WriteLine("\tEnter x to exit");
            Console.Write("Selection: ");
        }

        static void PrintGearCombinations(IGearBox gearBox)
        {
            foreach (var t in gearBox.Gears)
            {
                Console.WriteLine($"Gear ratio {t.Ratio} can be generated by the following combinations");
                foreach(int[] combination in t.Combinations)
                {
                    Console.WriteLine($"\tFront: {combination[0]}, Rear: {combination[1]}");
                }
            }
        }

        static void Main(string[] args)
        {
            char input = '_';
            
            RingSet chainring = new RingSet {Rings = new int[]{} };
            RingSet cassette = new RingSet {Rings = new int[]{} };

            Bike myBike = new Bike();

            while (input != 'x')
            {
                PrintMainMenu();
                input = char.ToLower(Console.ReadKey().KeyChar);

                switch (input)
                {
                    case 'n':
                        Console.WriteLine("\nCreating new bike");
                        chainring.Rings = new int[] { 32, 22 };
                        cassette.Rings = new int[] {11, 13, 15, 17, 19, 21, 24, 28, 32, 37, 46 };
                        myBike.SetBike(chainring, cassette);
                        PrintGearCombinations(myBike.GetGearBox());
                        break;

                    case 'g':
                        Console.WriteLine("\nGetting current bike");
                        Console.WriteLine($"Current bike has {myBike.GetShifterRingCounts("front")} chainring(s)");
                        Console.WriteLine($"Front shifter is current at {myBike.GetShifter("front").CurPos+1} chainring");
                        Console.WriteLine($"Current bike has {myBike.GetShifterRingCounts("rear")} ring(s)");
                        Console.WriteLine($"Rear shifter is current at {myBike.GetShifter("rear").CurPos+1} ring");
                        PrintGearCombinations(myBike.GetGearBox());
                        break;

                    default:
                        Console.WriteLine($"\nUnknown input char: {input}");
                        break;

                }





            }

        }
    }
}
