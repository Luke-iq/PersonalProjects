using System;
using System.Collections.Generic;

namespace SequentialGearShiftingConsole
{
    class Program
    {
        static void PrintMainMenu(Drivetrain drivetrain)
        {
            PrintAvailableGearRatios(drivetrain.Gears());
            PrintCurrentGearInfo(drivetrain);
            Console.WriteLine("Enter u to shift up");
            Console.WriteLine("Enter d to shift down");
            Console.WriteLine("Enter x to exit");
            Console.Write("Selection: ");
        }

        static void PrintAvailableGearRatios(GearRatios gears)
        {
            string gearRatios = "\t\t";
            foreach (double ratio in gears.GetAllAvailableGearRatios())
            {
                gearRatios +=  ratio+" ";
            }
            Console.WriteLine("\n\tHere are the available gear ratios");
            Console.WriteLine(gearRatios+"\n");
        }

        static void PrintCurrentGearInfo(Drivetrain drivetrain)
        {
            Console.WriteLine($"\tCurrent Gear: {drivetrain.CurrentGear() + 1} with ratio of: {drivetrain.CurrentRatio()}");
            Console.WriteLine($"\tGenerated by {drivetrain.CurrentGearCombination()[0]} chainring and {drivetrain.CurrentGearCombination()[1]} cog\n");
        }

        static void Main(string[] args)
        {
            char input = '_';
            var chainring = new int[] { 32, 22 };
            var cassette = new int[] { 11, 13, 15, 17, 19, 21, 24, 28, 32, 37, 46 };
            Drivetrain myDrivetrain = new Drivetrain(chainring, cassette);

            Console.WriteLine("Bicycle sequential gear shitting simulator\n");
            while (input != 'x')
            {
                PrintMainMenu(myDrivetrain);
                input = char.ToLower(Console.ReadKey().KeyChar);

                switch (input)
                {
                    case 'u':
                        try
                        {
                            myDrivetrain.Shift(ShiftDirection.Up);
                        }
                        catch (Exception ex)
                        {
                            Console.WriteLine($"\n{ex.Message}");
                        }

                        break;

                    case 'd':
                        try
                        {
                            myDrivetrain.Shift(ShiftDirection.Down);
                        }
                        catch (Exception ex)
                        {
                            Console.WriteLine($"\n{ex.Message}");
                        }

                        break;

                    default:
                        Console.WriteLine($"\nUnknown input char: {input}");
                        break;

                }

            }

        }
    }
}
